{"version":3,"sources":["Frorm.js","App.js","serviceWorker.js","index.js"],"names":["Form","state","title","author","description","e","this","props","onChange","target","name","value","setState","preventDefault","onUpdateHandle","placeholder","change","onClick","onSubmit","React","Component","App","myHeaders","url","edit","editId","details","detailsId","books","editedBook","updatedValue","axios","get","headers","then","res","data","getData","delete","arguments","status","patch","console","log","post","id","book_id","getRentalsData","rentals","map","rental","key","rental_id","start_date","end_date","user_id","onRentHandle","bind","onReturnHandle","className","JSON","stringify","onAddHandle","book","onEditHandle","onDeleteHandle","onDetailsHandle","detailsRender","FormRender","renderDeleteInfo","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.810db8fc.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class Form extends React.Component {\n  state = {\n    title: \"\",\n    author: \"\",\n    description: \"\"\n  }\n  change(e) {\n    this.props.onChange({\n      [e.target.name]: e.target.value\n    });\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n  onSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      name: \"\",\n      author: \"\",\n      description: \"\"\n    });\n    this.props.onUpdateHandle();\n    this.props.onChange({\n      name: \"\",\n      author: \"\",\n      description: \"\"\n    });\n  }\n  render() {\n    return (\n      <form>\n        <br />\n        <input \n          name='name'\n          placeholder='Title'\n          value={this.state.name}\n          onChange={e => this.change(e)}\n        />\n        <br />\n        <input \n          name='author'\n          placeholder='Author'\n          value={this.state.author}\n          onChange={e => this.change(e)}\n        />\n        <br />\n        <input \n          name='description'\n          placeholder='Description'\n          value={this.state.description}\n          onChange={e => this.change(e)}\n        />\n        <br />\n        <button onClick={e => this.onSubmit(e)}>Submit</button>\n      </form>\n    )\n  }\n}","import React, { Component } from 'react';\nimport axios from 'axios';\n//import Todo from './Todo'; \nimport Form from './Frorm';\n\nclass App extends Component {\n  \n  myHeaders={\"API_KEY\": \"H10JZ74AT8CBUY57TP87\", 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': '*'}\n  state = {\n    url: 'http://3.9.104.221:5001/',\n    edit: false,\n    editId: null,\n    details: false,\n    detailsId: null,\n    books: [],\n    editedBook: {}\n  }\n\n  onChange(updatedValue) {\n    this.setState({\n      editedBook: {\n        ...this.state.editedBook,\n        ...updatedValue\n      }\n    });\n  }\n  getData(){\n    axios.get(this.state.url+\"view_books\", {headers: this.myHeaders}).then(res => {\n      this.setState({\n        books: res.data\n      })\n    });\n  }\n  componentDidMount() {\n    this.getData();\n  }\n  onDeleteHandle() {\n    axios.delete(this.state.url+\"book/\"+arguments[0], {headers: this.myHeaders}).then(res => {\n      if(res.status==200) {\n        this.getData();\n      }\n    })\n  }\n  onEditHandle() {\n    this.setState({\n      edit: true,\n      editId: arguments[0],\n    });\n  }\n  onUpdateHandle() {\n    axios.patch(this.state.url+\"book/\"+this.state.editId, this.state.editedBook, {headers: this.myHeaders}).then(res => {\n      if(res.status==200) {\n        this.getData();\n        this.setState({\n          edit: false,\n          editId: null,\n          editedBook: {}\n        })\n      }\n      else {\n        console.log(\"NIE UDAŁO SIĘ EDYTOWAĆ KSIĄŻKI\")\n      }\n    })\n  }\n  onAddHandle() {\n    axios.post(this.state.url+\"book\", this.state.editedBook, {headers: this.myHeaders}).then(res => {\n      if(res.status==200) {\n        this.getData();\n        this.setState({\n          edit: false,\n          id: null,\n          editedBook: {}\n        })\n      }\n      else {\n        console.log(\"NIE UDAŁO SIĘ DODAĆ KSIĄŻKI\")\n      }\n    })\n  }\n  getRentalsData(book_id) {\n    axios.get(this.state.url+\"book/\"+book_id, {headers: this.myHeaders}).then(res => {\n      this.setState({\n        details: res.data,\n        detailsId: arguments[0],\n      })\n    });\n  }\n  onDetailsHandle() {\n    this.getRentalsData(arguments[0])\n    /*this.setState({\n      \n      details: true\n    })*/\n  }\n  onRentHandle() {\n    axios.post(this.state.url+\"book/\"+arguments[0]+\"/rent\",{}, {headers: this.myHeaders}).then(res => {\n      if (res.status == 200) {\n        this.getRentalsData(arguments[0])\n        console.log(\"GICIOR KSIĄŻKA WYPOŻYCZONA\")\n      }\n    });\n  }\n  onReturnHandle() {\n    axios.post(this.state.url+\"book/\"+arguments[0]+\"/return\",{}, {headers: this.myHeaders}).then(res => {\n      if (res.status == 200) {\n        this.getRentalsData(arguments[0])\n        console.log(\"GICIOR KSIĄŻKA ODDANA\")\n      }\n    });\n  }\n  detailsRender(book_id) {\n    if(this.state.details && book_id == this.state.detailsId) {\n      let rentals = this.state.details.rentals.map((rental) => {\n        return (\n          <tr key={rental.rental_id}>\n            <td>{rental.rental_id}</td>\n            <br />\n            <td>{rental.start_date}</td>\n            <br />\n            <td>{rental.end_date}</td>\n            <br />\n            <td>{rental.user_id}</td> \n          </tr>\n        )\n      });\n      return (\n        <tr>\n          <button onClick={this.onRentHandle.bind(this, book_id)}>Rent</button>\n          <button onClick={this.onReturnHandle.bind(this, book_id)}>Return</button>\n          {rentals}\n        </tr>\n\n        )\n    }\n  }\n  FormRender() {\n    if(this.state.edit) {\n      return (\n        <div className=\"form\">\n          Edytowanie\n          <Form onUpdateHandle={() => this.onUpdateHandle()} onChange={editedBook => this.onChange(editedBook)} />\n          <p>\n            {JSON.stringify(this.state.editedBook,null,2)}\n          </p>\n        </div>\n      )\n    }\n    else {\n      return (\n        <div className=\"form\">\n          Dodawanie\n          <Form onUpdateHandle={() => this.onAddHandle()} onChange={editedBook => this.onChange(editedBook)} />\n          <p>\n            {JSON.stringify(this.state.editedBook,null,2)}\n          </p>\n        </div>\n      )\n\n    }\n  }\n  render() {\n    let books = this.state.books.map((book) => {\n      return (\n        <tr key={book.book_id}>\n          <td>{book.book_id}</td>\n          <td>{book.name}</td>\n          <td>{book.author}</td>\n          <td>{book.description}</td>\n          <td>{book.user_id}</td>\n          <td>\n            <button onClick={this.onEditHandle.bind(this,book.book_id)}>Edit</button>\n            <button onClick={this.onDeleteHandle.bind(this, book.book_id)}>Delete</button>\n            <button onClick={this.onDetailsHandle.bind(this, book.book_id)}>Details</button>\n          </td>\n          {this.detailsRender(book.book_id)}\n        </tr>\n      )\n    });\n    return (\n      \n      <div className=\"App-container\">\n        {this.FormRender()}\n        {this.renderDeleteInfo}\n        <table>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Title</th>\n              <th>Author</th>\n              <th>Description</th>\n              <th>Owner ID</th>\n            </tr>\n          </thead>\n          <tbody>\n            {books}\n          </tbody>\n        </table>\n      </div>\n      );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}