{"ast":null,"code":"var _jsxFileName = \"/app/src/Todo.js\";\nimport React, { Component } from 'react';\n\nclass Todo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      edit: false,\n      id: null,\n      mockData: [{\n        id: '1',\n        title: 'Buy Milk',\n        done: false,\n        date: new Date()\n      }, {\n        id: 2,\n        title: 'Metting with Ali',\n        done: false,\n        date: new Date()\n      }, {\n        id: '3',\n        title: 'Tea break',\n        done: false,\n        date: new Date()\n      }, {\n        id: '4',\n        title: 'Go for a run.',\n        done: false,\n        date: new Date()\n      }]\n    };\n  }\n\n  onsubmitHandle(event) {\n    event.preventDefault();\n    this.setState({\n      mockData: [...this.state.mockData, {\n        id: Date.now(),\n        title: event.target.item.value,\n        done: false,\n        date: new Date()\n      }]\n    });\n    event.target.item.value = '';\n  }\n\n  onDeleteHandle() {\n    let id = arguments[0];\n    this.setState({\n      mockData: this.state.mockData.filter(item => {\n        if (item.id !== id) {\n          return item;\n        }\n      })\n    });\n  }\n\n  onEditHandle(event) {\n    this.setState({\n      edit: true,\n      id: arguments[0],\n      title: arguments[1]\n    });\n  }\n\n  onUpdateHandle(event) {\n    event.preventDefault();\n    this.setState({\n      mockData: this.state.mockData.map(item => {\n        if (item.id === this.state.id) {\n          item['title'] = event.target.updatedItem.value;\n          return item;\n        }\n\n        return item;\n      })\n    });\n    this.setState({\n      edit: false\n    });\n  }\n\n  onCompleteHandle() {\n    let id = arguments[0];\n    this.setState({\n      mockData: this.state.mockData.map(item => {\n        if (item.id === id) {\n          item['done'] = true;\n          return item;\n        }\n\n        return item;\n      })\n    });\n  }\n\n  renderEditForm() {\n    if (this.state.edit) {\n      return React.createElement(\"form\", {\n        onSubmit: this.onUpdateHandle.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"updatedItem\",\n        className: \"item\",\n        defaultValue: this.state.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"update-add-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Update\"));\n    } else {\n      return React.createElement(\"form\", {\n        onSubmit: this.onsubmitHandle.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"item\",\n        className: \"item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn-add-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Add\"));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.renderEditForm(), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.state.mockData.map(item => React.createElement(\"li\", {\n      key: item.id,\n      className: item.done ? 'done' : 'hidden',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, item.title, React.createElement(\"button\", {\n      onClick: this.onDeleteHandle.bind(this, item.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(\"button\", {\n      onClick: this.onEditHandle.bind(this, item.id, item.title),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Edit\"), React.createElement(\"button\", {\n      onClick: this.onCompleteHandle.bind(this, item.id, item.title),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Complete\")))));\n  }\n\n}\n\nexport default Todo;","map":{"version":3,"sources":["/app/src/Todo.js"],"names":["React","Component","Todo","state","edit","id","mockData","title","done","date","Date","onsubmitHandle","event","preventDefault","setState","now","target","item","value","onDeleteHandle","arguments","filter","onEditHandle","onUpdateHandle","map","updatedItem","onCompleteHandle","renderEditForm","bind","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzBE,KADyB,GACjB;AACJC,MAAAA,IAAI,EAAE,KADF;AAEJC,MAAAA,EAAE,EAAE,IAFA;AAGJC,MAAAA,QAAQ,EAAE,CAAC;AACPD,QAAAA,EAAE,EAAC,GADI;AAEPE,QAAAA,KAAK,EAAE,UAFA;AAGPC,QAAAA,IAAI,EAAE,KAHC;AAIPC,QAAAA,IAAI,EAAE,IAAIC,IAAJ;AAJC,OAAD,EAMV;AACIL,QAAAA,EAAE,EAAC,CADP;AAEIE,QAAAA,KAAK,EAAC,kBAFV;AAGIC,QAAAA,IAAI,EAAE,KAHV;AAIIC,QAAAA,IAAI,EAAE,IAAIC,IAAJ;AAJV,OANU,EAYV;AACIL,QAAAA,EAAE,EAAC,GADP;AAEIE,QAAAA,KAAK,EAAC,WAFV;AAGIC,QAAAA,IAAI,EAAE,KAHV;AAIIC,QAAAA,IAAI,EAAE,IAAIC,IAAJ;AAJV,OAZU,EAkBV;AACIL,QAAAA,EAAE,EAAC,GADP;AAEIE,QAAAA,KAAK,EAAE,eAFX;AAGIC,QAAAA,IAAI,EAAE,KAHV;AAIIC,QAAAA,IAAI,EAAE,IAAIC,IAAJ;AAJV,OAlBU;AAHN,KADiB;AAAA;;AA6BzBC,EAAAA,cAAc,CAACC,KAAD,EAAQ;AAClBA,IAAAA,KAAK,CAACC,cAAN;AACA,SAAKC,QAAL,CAAc;AACVR,MAAAA,QAAQ,EAAE,CAAC,GAAG,KAAKH,KAAL,CAAWG,QAAf,EAAyB;AAC/BD,QAAAA,EAAE,EAACK,IAAI,CAACK,GAAL,EAD4B;AAE/BR,QAAAA,KAAK,EAAEK,KAAK,CAACI,MAAN,CAAaC,IAAb,CAAkBC,KAFM;AAG/BV,QAAAA,IAAI,EAAE,KAHyB;AAI/BC,QAAAA,IAAI,EAAE,IAAIC,IAAJ;AAJyB,OAAzB;AADA,KAAd;AAQAE,IAAAA,KAAK,CAACI,MAAN,CAAaC,IAAb,CAAkBC,KAAlB,GAA0B,EAA1B;AACH;;AACDC,EAAAA,cAAc,GAAG;AACb,QAAId,EAAE,GAAGe,SAAS,CAAC,CAAD,CAAlB;AACA,SAAKN,QAAL,CAAc;AACVR,MAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWG,QAAX,CAAoBe,MAApB,CAA2BJ,IAAI,IAAI;AACzC,YAAGA,IAAI,CAACZ,EAAL,KAAYA,EAAf,EAAmB;AACf,iBAAOY,IAAP;AACH;AACJ,OAJS;AADA,KAAd;AAOH;;AACDK,EAAAA,YAAY,CAACV,KAAD,EAAQ;AAChB,SAAKE,QAAL,CAAc;AACVV,MAAAA,IAAI,EAAE,IADI;AAEVC,MAAAA,EAAE,EAAEe,SAAS,CAAC,CAAD,CAFH;AAGVb,MAAAA,KAAK,EAAEa,SAAS,CAAC,CAAD;AAHN,KAAd;AAKH;;AACDG,EAAAA,cAAc,CAACX,KAAD,EAAQ;AAClBA,IAAAA,KAAK,CAACC,cAAN;AACA,SAAKC,QAAL,CAAc;AACVR,MAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWG,QAAX,CAAoBkB,GAApB,CAAwBP,IAAI,IAAI;AACtC,YAAGA,IAAI,CAACZ,EAAL,KAAY,KAAKF,KAAL,CAAWE,EAA1B,EAA8B;AAC1BY,UAAAA,IAAI,CAAC,OAAD,CAAJ,GAAgBL,KAAK,CAACI,MAAN,CAAaS,WAAb,CAAyBP,KAAzC;AACA,iBAAOD,IAAP;AACH;;AACD,eAAOA,IAAP;AACH,OANS;AADA,KAAd;AASA,SAAKH,QAAL,CAAc;AACVV,MAAAA,IAAI,EAAE;AADI,KAAd;AAGH;;AACDsB,EAAAA,gBAAgB,GAAG;AACf,QAAIrB,EAAE,GAAGe,SAAS,CAAC,CAAD,CAAlB;AACA,SAAKN,QAAL,CAAc;AACVR,MAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWG,QAAX,CAAoBkB,GAApB,CAAwBP,IAAI,IAAI;AACtC,YAAIA,IAAI,CAACZ,EAAL,KAAYA,EAAhB,EAAoB;AAChBY,UAAAA,IAAI,CAAC,MAAD,CAAJ,GAAe,IAAf;AACA,iBAAQA,IAAR;AACH;;AACD,eAAOA,IAAP;AACH,OANS;AADA,KAAd;AASH;;AACDU,EAAAA,cAAc,GAAG;AACb,QAAI,KAAKxB,KAAL,CAAWC,IAAf,EAAqB;AACjB,aAAO;AAAM,QAAA,QAAQ,EAAE,KAAKmB,cAAL,CAAoBK,IAApB,CAAyB,IAAzB,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,aAAxB;AAAsC,QAAA,SAAS,EAAC,MAAhD;AAAuD,QAAA,YAAY,EAAE,KAAKzB,KAAL,CAAWI,KAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADG,EAEH;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFG,CAAP;AAIH,KALD,MAMK;AACL,aAAO;AAAM,QAAA,QAAQ,EAAE,KAAKI,cAAL,CAAoBiB,IAApB,CAAyB,IAAzB,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,SAAS,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADG,EAEH;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFG,CAAP;AAIC;AACJ;;AACDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKF,cAAL,EADL,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKxB,KAAL,CAAWG,QAAX,CAAoBkB,GAApB,CAAwBP,IAAI,IACzB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACZ,EAAd;AAAkB,MAAA,SAAS,EAAKY,IAAI,CAACT,IAAL,GAAY,MAAZ,GAAqB,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKS,IAAI,CAACV,KADV,EAEI;AAAQ,MAAA,OAAO,EAAE,KAAKY,cAAL,CAAoBS,IAApB,CAAyB,IAAzB,EAA+BX,IAAI,CAACZ,EAApC,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGI;AAAQ,MAAA,OAAO,EAAE,KAAKiB,YAAL,CAAkBM,IAAlB,CAAuB,IAAvB,EAA6BX,IAAI,CAACZ,EAAlC,EAAsCY,IAAI,CAACV,KAA3C,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAII;AAAQ,MAAA,OAAO,EAAE,KAAKmB,gBAAL,CAAsBE,IAAtB,CAA2B,IAA3B,EAAgCX,IAAI,CAACZ,EAArC,EAAyCY,IAAI,CAACV,KAA9C,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,CADH,CADL,CAHJ,CADJ;AAgBH;;AApHwB;;AAsH7B,eAAeL,IAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Todo extends Component {\n    state = {\n        edit: false,\n        id: null,\n        mockData: [{\n            id:'1',\n            title: 'Buy Milk',\n            done: false,\n            date: new Date()\n        },\n        {\n            id:2,\n            title:'Metting with Ali',\n            done: false,\n            date: new Date()\n        },\n        {\n            id:'3',\n            title:'Tea break',\n            done: false,\n            date: new Date()\n        },\n        {\n            id:'4',\n            title: 'Go for a run.',\n            done: false,\n            date: new Date()\n        }]\n    }\n    onsubmitHandle(event) {\n        event.preventDefault();\n        this.setState({\n            mockData: [...this.state.mockData, {\n                id:Date.now(),\n                title: event.target.item.value,\n                done: false,\n                date: new Date()\n            }]\n        });\n        event.target.item.value = '';\n    }\n    onDeleteHandle() {\n        let id = arguments[0];\n        this.setState({\n            mockData: this.state.mockData.filter(item => {\n                if(item.id !== id) {\n                    return item;\n                }\n            })\n        });\n    }\n    onEditHandle(event) {\n        this.setState({\n            edit: true,\n            id: arguments[0],\n            title: arguments[1]\n        });\n    }\n    onUpdateHandle(event) {\n        event.preventDefault();\n        this.setState({\n            mockData: this.state.mockData.map(item => {\n                if(item.id === this.state.id) {\n                    item['title'] = event.target.updatedItem.value;\n                    return item;\n                }\n                return item;\n            })\n        });\n        this.setState({\n            edit: false\n        });\n    }\n    onCompleteHandle() {\n        let id = arguments[0];\n        this.setState({\n            mockData: this.state.mockData.map(item => {\n                if (item.id === id) {\n                    item['done'] = true;\n                    return  item;\n                }\n                return item;\n            })\n        });\n    }\n    renderEditForm() {\n        if (this.state.edit) {\n            return <form onSubmit={this.onUpdateHandle.bind(this)}>\n                <input type=\"text\" name=\"updatedItem\" className=\"item\" defaultValue={this.state.title} />\n                <button className=\"update-add-item\">Update</button>\n            </form>\n        }\n        else {\n        return <form onSubmit={this.onsubmitHandle.bind(this)}>\n            <input type=\"text\" name=\"item\" className=\"item\"/>\n            <button className=\"btn-add-item\">Add</button>\n        </form>\n        }\n    }\n    render() {\n        return (\n            <div>\n                {this.renderEditForm()}\n\n                <ul>\n                    {this.state.mockData.map(item => (\n                        <li key={item.id} className = { item.done ? 'done' : 'hidden' } >\n                            {item.title}\n                            <button onClick={this.onDeleteHandle.bind(this, item.id)}>Delete</button>\n                            <button onClick={this.onEditHandle.bind(this, item.id, item.title)}>Edit</button>\n                            <button onClick={this.onCompleteHandle.bind(this,item.id, item.title)}>Complete</button>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        );\n    }\n}\nexport default Todo;"]},"metadata":{},"sourceType":"module"}